version: "{build}"
branches:
  only:
    - master
    - RC_1_2
    - RC_1_1
image: Visual Studio 2017
clone_depth: 1
environment:
  matrix:
    - variant: test_release
      compiler: msvc-14.1
      model: 64
      python: 1
      python_dist: 1
      crypto: openssl
      bjam: 1

artifacts:
  - path: bindings/python/dist/*
    name: python-module

install:
  - git submodule update --init --recursive
  - set ROOT_DIRECTORY=%CD%
  - cd %ROOT_DIRECTORY%
  - set PYTHON_ROOT=C:\Python37-x64
  - set PYTHON_INTERPRETER=C:\Python37-x64\python.exe
  - set MSYS_PATH=c:\msys64\mingw32\bin
  - set BOOST_ROOT=C:\Libraries\boost_1_69_0
  - set BOOST_BUILD_PATH=%BOOST_ROOT%\tools\build
  - set PATH=%BOOST_ROOT%;%BOOST_BUILD_PATH%;%PYTHON_ROOT%;%MSYS_PATH%;%PATH%
  - ps: '"using msvc : 14.1 ;`nusing gcc ;`nusing python : 3.7 : c:\\Python37-x64 : c:\\Python37-x64\\include : c:\\Python37-x64\\libs ;`n" | Set-Content $env:HOMEDRIVE\$env:HOMEPATH\user-config.jam'
  - type %HOMEDRIVE%%HOMEPATH%\user-config.jam
  - g++ --version
  - python --version
  - cd %BOOST_ROOT%
  - bootstrap.bat >nul

build_script:
  # python binding
  - cd %ROOT_DIRECTORY%\bindings\python
  # we use 64 bit python builds
  # boost.python itself doesn't build warning free, so we can't build
  # with warnings-as-errors
  - if defined python (
    b2.exe --hash openssl-version=pre1.1 warnings=all -j %NUMBER_OF_PROCESSORS% %compiler% address-model=%model% variant=%variant% runtime-link=static link=static libtorrent-link=static boost-link=static crypto=%crypto% asserts=on export-extra=on dht=on stage_module stage_dependencies
    )
  - if defined python_dist (
    c:\Python37-x64\python.exe setup.py bdist --format=msi
    )
